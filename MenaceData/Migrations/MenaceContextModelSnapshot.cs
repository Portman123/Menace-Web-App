// <auto-generated />
using System;
using MenaceData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenaceData.Migrations
{
    [DbContext(typeof(MenaceContext))]
    partial class MenaceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Noughts_and_Crosses.AIMenace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AIMenace");
                });

            modelBuilder.Entity("Noughts_and_Crosses.Bead", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<Guid?>("MatchboxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchboxId");

                    b.ToTable("Bead");
                });

            modelBuilder.Entity("Noughts_and_Crosses.BoardPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BoardPosition");
                });

            modelBuilder.Entity("Noughts_and_Crosses.Matchbox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AIMenaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AIMenaceId");

                    b.HasIndex("BoardPositionId");

                    b.ToTable("Matchbox");
                });

            modelBuilder.Entity("Noughts_and_Crosses.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Draws")
                        .HasColumnType("int");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Player");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Player");
                });

            modelBuilder.Entity("Noughts_and_Crosses.PlayerHumanOnWeb", b =>
                {
                    b.HasBaseType("Noughts_and_Crosses.Player");

                    b.HasDiscriminator().HasValue("PlayerHumanOnWeb");
                });

            modelBuilder.Entity("Noughts_and_Crosses.PlayerMenace", b =>
                {
                    b.HasBaseType("Noughts_and_Crosses.Player");

                    b.Property<Guid>("MenaceEngineId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MenaceEngineId");

                    b.HasDiscriminator().HasValue("PlayerMenace");
                });

            modelBuilder.Entity("Noughts_and_Crosses.Bead", b =>
                {
                    b.HasOne("Noughts_and_Crosses.Matchbox", null)
                        .WithMany("Beads")
                        .HasForeignKey("MatchboxId");
                });

            modelBuilder.Entity("Noughts_and_Crosses.Matchbox", b =>
                {
                    b.HasOne("Noughts_and_Crosses.AIMenace", null)
                        .WithMany("Matchboxes")
                        .HasForeignKey("AIMenaceId");

                    b.HasOne("Noughts_and_Crosses.BoardPosition", "BoardPosition")
                        .WithMany()
                        .HasForeignKey("BoardPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoardPosition");
                });

            modelBuilder.Entity("Noughts_and_Crosses.PlayerMenace", b =>
                {
                    b.HasOne("Noughts_and_Crosses.AIMenace", "MenaceEngine")
                        .WithMany()
                        .HasForeignKey("MenaceEngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenaceEngine");
                });

            modelBuilder.Entity("Noughts_and_Crosses.AIMenace", b =>
                {
                    b.Navigation("Matchboxes");
                });

            modelBuilder.Entity("Noughts_and_Crosses.Matchbox", b =>
                {
                    b.Navigation("Beads");
                });
#pragma warning restore 612, 618
        }
    }
}
