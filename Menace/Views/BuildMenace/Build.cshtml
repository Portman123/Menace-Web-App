@using Menace.ViewModels

@model GamePlayState


@{
    //
    string GetTileClass(string board, int x, int y)
    {
        var tileValue = GetTileValue(board, x, y);

        return string.IsNullOrWhiteSpace(tileValue) ? "" : $"player{tileValue}";
    }

    // Reading tile value from string
    string GetTileValue(string board, int x, int y)
    {
        return board.Substring(x * 3 + y, 1);
    }
}

@{
    ViewData["Title"] = "PlayView";
    var board = GamePlayState.UnwrapBoard(Model.BoardBeforeInput);
}


<!doctype html>
<html lang="en">
<head>

    <link href="/docs/5.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">

    <!-- Favicons -->
    <link rel="apple-touch-icon" href="/docs/5.2/assets/img/favicons/apple-touch-icon.png" sizes="180x180">
    <link rel="icon" href="/docs/5.2/assets/img/favicons/favicon-32x32.png" sizes="32x32" type="image/png">
    <link rel="icon" href="/docs/5.2/assets/img/favicons/favicon-16x16.png" sizes="16x16" type="image/png">
    <link rel="manifest" href="/docs/5.2/assets/img/favicons/manifest.json">
    <link rel="mask-icon" href="/docs/5.2/assets/img/favicons/safari-pinned-tab.svg" color="#712cf9">
    <link rel="icon" href="/docs/5.2/assets/img/favicons/favicon.ico">
    <meta name="theme-color" content="#712cf9">


    <!-- Custom styles for this template -->
    <link href="dashboard.css" rel="stylesheet">
</head>
<body>
    <div class="text-centre">
        <h1 class="display-4 ">Build Menace</h1>
    </div>

    <div class="container-fluid">
        <div class="row">
            <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse ">
                <div class="position-sticky pt-3 sidebar-sticky ">
                    <h5 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted text-uppercase">
                        <span>Train</span>
                        <a class="link-secondary" href="#" aria-label="Add a new report">
                            <span data-feather="plus-circle" class="align-text-bottom"></span>
                        </a>
                    </h5>
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="btn" onclick="location.href='@( Url.Action("TrainOptimal", "BuildMenace",
                                    new GameCreate { Type = Model.GameType, Player1Id = Model.Player1Id, Player2Id = Model.Player2Id } ) )'" />>
                            <span data-feather="file" class="align-text-bottom"></span>
                            Optimal AI
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="btn" href="#">
                                <span data-feather="shopping-cart" class="align-text-bottom"></span>
                                Random AI
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="btn" href="#">
                                <span data-feather="users" class="align-text-bottom"></span>
                                MENACE
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h2>Play</h2>
                </div>

                <div class="my-4 w-100 bg-dark text-centre" id="myChart" width="900" height="380">
                    <section class="display text-light text-centre">
                        Player <span class="display-player @( $"player{Model.CurrentPlayerSymbol}" )">@Model.CurrentPlayerSymbol</span>'s turn
                    </section>
                    <br />
                    <section class="containerCustom">
                        <div class="tile @( GetTileClass(board, 0, 0 ) )">@GetTileValue(board, 0, 0)</div>
                        <div class="tile @( GetTileClass(board, 0, 1 ) )">@GetTileValue(board, 0, 1)</div>
                        <div class="tile @( GetTileClass(board, 0, 2 ) )">@GetTileValue(board, 0, 2)</div>
                        <div class="tile @( GetTileClass(board, 1, 0 ) )">@GetTileValue(board, 1, 0)</div>
                        <div class="tile @( GetTileClass(board, 1, 1 ) )">@GetTileValue(board, 1, 1)</div>
                        <div class="tile @( GetTileClass(board, 1, 2 ) )">@GetTileValue(board, 1, 2)</div>
                        <div class="tile @( GetTileClass(board, 2, 0 ) )">@GetTileValue(board, 2, 0)</div>
                        <div class="tile @( GetTileClass(board, 2, 1 ) )">@GetTileValue(board, 2, 1)</div>
                        <div class="tile @( GetTileClass(board, 2, 2 ) )">@GetTileValue(board, 2, 2)</div>
                    </section>
                    <br />
                    <section class="display announcer hide text-light text-centre"></section>
                    @{
                        if (Model.IsGameActive)
                        {
                            <form asp-action="Build" id="submitForm">
                                <input type="hidden" asp-for="BoardBeforeInput" id="hiddenBoardBeforeInput" />
                                <input type="hidden" asp-for="BoardAfterInput" id="hiddenBoardAfterInput" />
                                <input type="hidden" asp-for="CurrentPlayerSymbol" id="hiddenCurrentPlayerSymbol" />
                                <input type="hidden" asp-for="GameHistoryId" id="hiddenGameHistoryId" />
                                <input type="hidden" asp-for="IsGameActive" id="hiddenIsGameActive" />
                                <input type="hidden" asp-for="GameType" id="hiddenGameType" />
                            </form>
                        }
                        else
                        {
                            <div class="form-group">
                                <input type="submit" value="New Game" class="btn btn-primary" id="submitButton" onclick="location.href='@( Url.Action("Build", "BuildMenace",
                                    new GameCreate { Type = Model.GameType, Player1Id = Model.Player1Id, Player2Id = Model.Player2Id } ) )'" />
                            </div>
                            <input type="hidden" id="hiddenBoardBeforeInput" value="@Model.BoardBeforeInput" />
                            <input type="hidden" id="hiddenBoardAfterInput" />
                            <input type="hidden" id="hiddenCurrentPlayerSymbol" value="@Model.CurrentPlayerSymbol" />
                            <input type="hidden" id="hiddenGameHistoryId" />
                            <input type="hidden" id="hiddenIsGameActive" value="@Model.IsGameActive" />
                        }
                    }
                </div>
                @section Scripts {
                @{
                await Html.RenderPartialAsync("_ValidationScriptsPartial");
                    <script src="~/js/NandCApplet.js"></script>
                }
                }
                @{
                    if (Model.Beads != null)
                    {
                        <div>
                            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                                <h2>Diagnostics</h2>
                            </div>

                            <div>
                                <h4>Move Ranking</h4>

                                <div class="table-responsive">
                                    <table class="table table-striped table-sm">
                                        <thead>
                                            <tr>
                                                <th>X Coord</th>
                                                <th>Y Coord</th>
                                                <th>Bead Count</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var bead in Model.Beads.OrderBy(b => -b.Count).ThenBy(b => b.X).ThenBy(b => b.Y))
                                            {
                                                <tr>
                                                    <td>@bead.X</td>
                                                    <td>@bead.Y</td>
                                                    <td>@bead.Count</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <h4>Matchboxes</h4>
                            <div class="table-responsive">
                                <table class="table table-striped table-sm">
                                    <thead>
                                        <tr>
                                            <th>BoardBeforeInput Position</th>
                                            <th>Bead Count</th>
                                            <th>Best Move</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @*@foreach (var item in Model)
                                            {
                                            <tr>
                                            <td>@Html.DisplayFor(modelItem => item.BoardPosition)</td>
                                            <td>@Html.DisplayFor(modelItem => item.GetNumberOfBeads())</td>
                                            <td>@Html.DisplayFor(modelItem => item.Beads.Max())</td>
                                            <td>
                                            <a asp-action="Details" asp-route-id="">Details</a>
                                            </td>
                                            </tr>
                                            }*@
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                }
            </main>
        </div>
    </div>


    <script src="/docs/5.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js" integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js" integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha" crossorigin="anonymous"></script>
    <script src="dashboard.js"></script>
</body>
</html>
