@using Menace.ViewModels
@using Noughts_and_Crosses
@model MenaceDetails


@{
    ViewData["Title"] = "Details";


}

<h1>Details</h1>

<div>
    <h4>Player</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Player.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Player.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.RewardFunctionType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RewardFunctionType)
        </dd>
        <dt class="col-sm-2">
            Games
        </dt>
        <dd class="col-sm-10">
            @(Model.Player.Wins + Model.Player.Draws + Model.Player.Losses)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Player.Wins)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Player.Wins)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Player.Draws)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Player.Draws)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Player.Losses)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Player.Losses)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Matchboxes)
        </dt>
        <dd class="col-sm-10">
            @Model.Matchboxes.Count
        </dd>
    </dl>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1>Training History</h1>
</div>

<form asp-action="Train">
    <span>
        Train now versus:&nbsp;
        <input type="radio" asp-for="TrainingOption" value="random" id="random" checked="checked" /><label for="random">Random</label>&nbsp;
        <input type="radio" asp-for="TrainingOption" value="optimal" id="optimal" /><label for="optimal">Optimal</label>&nbsp;
    </span>
    <input name="submit" type="submit" value="Train" class="btn btn-primary" />

    <input type="hidden" asp-for="PlayerId" />
</form>

<div class="table-responsive">
    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th>
                    Round
                </th>
                <th>
                    Opponent
                </th>
                <th>
                    Wins
                </th>
                <th>
                    Draws
                </th>
                <th>
                    Losses
                </th>
                <th>
                    Games
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.TrainingHistory.Rounds.OrderBy(r => r.RoundNumber))
            {
                <tr>
                    <td>
                        @item.RoundNumber
                    </td>
                    <td>
                        @item.Opponent
                    </td>
                    <td>
                        @item.Wins
                    </td>
                    <td>
                        @item.Draws
                    </td>
                    <td>
                        @item.Losses
                    </td>
                    <td>
                        @(item.Wins + item.Draws + item.Losses)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1>Matchboxes</h1>
</div>

<div class="table-responsive">
    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th>
                    Board Position
                </th>
                <th>
                    Beads
                </th>
                <th>
                    Best Move
                </th>
                <th>
                    Wins
                </th>
                <th>
                    Draws
                </th>
                <th>
                    Losses
                </th>
                <th>
                    Games
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Matchboxes.OrderBy(m => -(m.Wins + m.Draws + m.Losses)))
            {
                string line1 = "";
                string line2 = "";
                string line3 = "";
                for (int i = 0; i < 3; i++)
                {
                    if (item.BoardPosition.BoardPositionId[i] == ' ')
                    {
                        line1 += '-';
                    }
                    else
                    {
                        line1 += item.BoardPosition.BoardPositionId[i];
                    }
                }
                for (int i = 3; i < 6; i++)
                {
                    if (item.BoardPosition.BoardPositionId[i] == ' ')
                    {
                        line2 += '-';
                    }
                    else
                    {
                        line2 += item.BoardPosition.BoardPositionId[i];
                    }
                }
                for (int i = 6; i < 9; i++)
                {
                    if (item.BoardPosition.BoardPositionId[i] == ' ')
                    {
                        line3 += '-';
                    }
                    else
                    {
                        line3 += item.BoardPosition.BoardPositionId[i];
                    }
                }

                Bead bestBead = item.Beads.OrderBy(b => -b.Count).ToArray()[0];

                <tr>
                    <td>
                        <p></p>
                        <p class="boardState">@line1</p>
                        <p class="boardState">@line2</p>
                        <p class="boardState">@line3</p>
                    </td>
                    <td>
                        @item.GetNumberOfBeads()
                    </td>
                    <td>
                        (@bestBead.X, @bestBead.Y)
                    </td>
                    <td>
                        @item.Wins
                    </td>
                    <td>
                        @item.Draws
                    </td>
                    <td>
                        @item.Losses
                    </td>
                    <td>
                        @(item.Wins + item.Draws + item.Losses)
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>

